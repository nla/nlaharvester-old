package harvester.data;

// Generated Jul 9, 2008 11:14:11 AM by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Collection generated by hbm2java
 */
@Entity
@Table(name = "collection")
public class Collection implements java.io.Serializable {

	private int collectionid;
	private String name;
	private String description;
	private String userguide;
	private Integer size;
	private ProfileStep loadstage;
	private Set<Profile> profiles = new HashSet<Profile>(0);
	private Set<Contributor> contributors = new HashSet<Contributor>(0);
	private Set<CollectionContact> contacts = new HashSet<CollectionContact>(0);

	public static final int THIS_IS_FIRST_HARVEST = 0;
	public static final int NOT_FIRST_HARVEST = 1;
	
	public int THIS_IS_FIRST_HARVEST() { return THIS_IS_FIRST_HARVEST; }
	public int NOT_FIRST_HARVEST() { return NOT_FIRST_HARVEST;}

	public Collection() {
	}

	public Collection(String name, String description, String userguide,
			Integer size, ProfileStep loadstage, Set<Profile> profiles,
			Set<Contributor> contributors, Set<CollectionContact> contacts) {
		this.name = name;
		this.description = description;
		this.userguide = userguide;
		this.size = size;
		this.loadstage = loadstage;
		this.profiles = profiles;
		this.contributors = contributors;
		this.contacts = contacts;
	}

	@GenericGenerator(name = "generator", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = @Parameter(name = "sequence_name", value = "collection_seq"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "collectionid", nullable = false)
	public int getCollectionid() {
		return this.collectionid;
	}

	public void setCollectionid(int collectionid) {
		this.collectionid = collectionid;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "userguide")
	public String getUserguide() {
		return this.userguide;
	}

	public void setUserguide(String userguide) {
		this.userguide = userguide;
	}

	@Column(name = "storesize")
	public Integer getSize() {
		return this.size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "psid")
	public ProfileStep getLoadstage() {
		return this.loadstage;
	}

	public void setLoadstage(ProfileStep loadstage) {
		this.loadstage = loadstage;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "collectionprofile", joinColumns = { @JoinColumn(name = "collectionid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "profileid", nullable = false, updatable = false) })
	@Cascade( { CascadeType.DELETE_ORPHAN })
	@OrderBy("name ASC")
	public Set<Profile> getProfiles() {
		return this.profiles;
	}

	public void setProfiles(Set<Profile> profiles) {
		this.profiles = profiles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "collection")
	@Cascade( { CascadeType.DELETE_ORPHAN })
	@OrderBy("name ASC")
	public Set<Contributor> getContributors() {
		return this.contributors;
	}

	public void setContributors(Set<Contributor> contributors) {
		this.contributors = contributors;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "collectionid") // updatable = false
	@Cascade( { CascadeType.DELETE_ORPHAN , CascadeType.ALL})
	@OrderBy("contactid DESC")
	public Set<CollectionContact> getContacts() {
		return this.contacts;
	}

	public void setContacts(Set<CollectionContact> contacts) {
		this.contacts = contacts;
	}

}
