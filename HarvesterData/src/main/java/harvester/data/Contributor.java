package harvester.data;

// Generated Jul 9, 2008 11:14:11 AM by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Contributor generated by hbm2java
 */
@Entity
@Table(name = "contributor")
public class Contributor implements java.io.Serializable {

	private int contributorid;
	private Collection collection;

	private ProfileStep harveststage;
	private Profile production;
	private Profile test;
	private Harvest lastharvest;
	private Set<ContributorContact> contacts = new HashSet<ContributorContact>(0);
	private Set<ContactSelections> contactselections = new HashSet<ContactSelections>(0);	//links to the collection level contacts
	private Set<Note> notes = new HashSet<Note>(0);
	private Set<Harvest> harvests = new HashSet<Harvest>(0);
	private String name;
	private String description;
	private int isscheduled;
	private int type;
	private String platform;
	private int htype;
	private int ismonitored;
	private int totalrecords;
	private String viewrecordsurl;
	private int granularity;
	private Integer hidefromworktray;
	private Integer isfinishedfirstharvest;
	private Harvest lastsuccessfultest;
	private Harvest lastsuccessfulprod;
	private Date dateadded;

	public static final int OAI = 0;
	public static final int WEB_CRAWL = 1;
	public static final int OTHER = 2;
	
	public static final int THIS_IS_FIRST_HARVEST = 0;
	public static final int NOT_FIRST_HARVEST = 1;

	public static final int SHORT_GRANULARITY = 0;
	public static final int LONG_GRANULARITY = 1;
	
	
	public int THIS_IS_FIRST_HARVEST() { return THIS_IS_FIRST_HARVEST; }
	public int NOT_FIRST_HARVEST() { return NOT_FIRST_HARVEST;}
	
	public Contributor() {
	}

	public Contributor(Collection collection) {
		this.collection = collection;
	}


	public Contributor(Collection collection, Set<ContributorContact> contacts,
			Set<ContactSelections> contactselections, int contributorid,
			String description, int granularity, Set<Harvest> harvests,
			ProfileStep harveststage, Integer hidefromworktray, int htype,
			Integer isfinishedfirstharvest, int ismonitored, int isscheduled,
			Harvest lastharvest, Harvest lastsuccessfulprod,
			Harvest lastsuccessfultest, String name, Set<Note> notes,
			String platform, Profile production, Profile test,
			int totalrecords, int type, String viewrecordsurl, Date dateadded) {
		this.collection = collection;
		this.contacts = contacts;
		this.contactselections = contactselections;
		this.contributorid = contributorid;
		this.description = description;
		this.granularity = granularity;
		this.harvests = harvests;
		this.harveststage = harveststage;
		this.hidefromworktray = hidefromworktray;
		this.htype = htype;
		this.isfinishedfirstharvest = isfinishedfirstharvest;
		this.ismonitored = ismonitored;
		this.isscheduled = isscheduled;
		this.lastharvest = lastharvest;
		this.lastsuccessfulprod = lastsuccessfulprod;
		this.lastsuccessfultest = lastsuccessfultest;
		this.name = name;
		this.notes = notes;
		this.platform = platform;
		this.production = production;
		this.test = test;
		this.totalrecords = totalrecords;
		this.type = type;
		this.viewrecordsurl = viewrecordsurl;
		this.dateadded = dateadded;
	}
	
	@GenericGenerator(name = "generator", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = @Parameter(name = "sequence_name", value = "contributor_seq"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "contributorid", nullable = false)
	public int getContributorid() {
		return this.contributorid;
	}

	public void setContributorid(int contributorid) {
		this.contributorid = contributorid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "collectionid", nullable = false)
	public Collection getCollection() {
		return this.collection;
	}

	public void setCollection(Collection collection) {
		this.collection = collection;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@Cascade( { CascadeType.DELETE_ORPHAN })
	@JoinColumn(name = "psid")
	public ProfileStep getHarveststage() {
		return this.harveststage;
	}

	public void setHarveststage(ProfileStep harveststage) {
		this.harveststage = harveststage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@Cascade( { CascadeType.DELETE_ORPHAN })
	@JoinColumn(name = "productionid")
	public Profile getProduction() {
		return this.production;
	}

	public void setProduction(Profile production) {
		this.production = production;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@Cascade( { CascadeType.DELETE_ORPHAN })
	@JoinColumn(name = "testid")
	public Profile getTest() {
		return this.test;
	}

	public void setTest(Profile test) {
		this.test = test;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lastharvestid")
	public Harvest getLastharvest() {
		return this.lastharvest;
	}

	public void setLastharvest(Harvest lastharvest) {
		this.lastharvest = lastharvest;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "contributorid")
	@Cascade( { CascadeType.DELETE_ORPHAN , CascadeType.ALL })
	@OrderBy("selectionid DESC")
	public Set<ContactSelections> getContactselections() {
		return contactselections;
	}
	public void setContactselections(Set<ContactSelections> contactselections) {
		this.contactselections = contactselections;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "contributorid")
	@Cascade( { CascadeType.DELETE_ORPHAN, CascadeType.ALL })
	@OrderBy("contactid DESC")
	public Set<ContributorContact> getContacts() {
		return this.contacts;
	}

	public void setContacts(Set<ContributorContact> contacts) {
		this.contacts = contacts;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "contributorid", updatable = false)
	@Cascade( { CascadeType.DELETE_ORPHAN })
	@OrderBy("timestamp DESC")
	public Set<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(Set<Note> notes) {
		this.notes = notes;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "contributorid", updatable = false)
	@Cascade( { CascadeType.DELETE_ORPHAN })
	@OrderBy("starttime DESC")
	public Set<Harvest> getHarvests() {
		return this.harvests;
	}

	public void setHarvests(Set<Harvest> harvests) {
		this.harvests = harvests;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "isscheduled")
	public int getIsscheduled() {
		return this.isscheduled;
	}

	public void setIsscheduled(int isscheduled) {
		this.isscheduled = isscheduled;
	}

	@Column(name = "type")
	public int getType() {
		return this.type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@Column(name = "platform")
	public String getPlatform() {
		return this.platform;
	}

	public void setPlatform(String platform) {
		this.platform = platform;
	}

	@Column(name = "htype")
	public int getHtype() {
		return this.htype;
	}

	public void setHtype(int htype) {
		this.htype = htype;
	}

	@Column(name = "ismonitored")
	public int getIsmonitored() {
		return this.ismonitored;
	}

	public void setIsmonitored(int ismonitored) {
		this.ismonitored = ismonitored;
	}

	@Column(name = "totalrecords")
	public int getTotalrecords() {
		return this.totalrecords;
	}

	public void setTotalrecords(int totalrecords) {
		this.totalrecords = totalrecords;
	}

	@Column(name = "viewrecordsurl")
	public String getViewrecordsurl() {
		return this.viewrecordsurl;
	}

	public void setViewrecordsurl(String viewrecordsurl) {
		this.viewrecordsurl = viewrecordsurl;
	}

	@Column(name = "granularity")
	public int getGranularity() {
		return this.granularity;
	}

	public void setGranularity(int granularity) {
		this.granularity = granularity;
	}

	@Column(name = "hidefromworktray")
	public Integer getHidefromworktray() {
		return this.hidefromworktray;
	}

	public void setHidefromworktray(Integer hidefromworktray) {
		this.hidefromworktray = hidefromworktray;
	}

	@Column(name = "isfinishedfirstharvest")
	public Integer getIsfinishedfirstharvest() {
		return this.isfinishedfirstharvest;
	}

	public void setIsfinishedfirstharvest(Integer isfinishedfirstharvest) {
		this.isfinishedfirstharvest = isfinishedfirstharvest;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lastsuccessfultestid")
	public Harvest getLastsuccessfultest() {
		return this.lastsuccessfultest;
	}

	public void setLastsuccessfultest(Harvest lastsuccessfultest) {
		this.lastsuccessfultest = lastsuccessfultest;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lastsuccessfulprodid")
	public Harvest getLastsuccessfulprod() {
		return this.lastsuccessfulprod;
	}

	public void setLastsuccessfulprod(Harvest lastsuccessfulprod) {
		this.lastsuccessfulprod = lastsuccessfulprod;
	}

	@Column(name = "dateadded")
	public Date getDateadded() {
		return dateadded;
	}
	public void setDateadded(Date dateadded) {
		this.dateadded = dateadded;
	}
	
}
