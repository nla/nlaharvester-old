package harvester.data;

// Generated Jul 9, 2008 11:14:11 AM by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * ProfileStep generated by hbm2java
 */
@Entity
@Table(name = "profilestep")
public class ProfileStep implements java.io.Serializable {

	private static final long serialVersionUID = 5745221468585822848L;
	
	private Integer psid;
	private int position;
	private String description;
	private Profile profile;	//profilesteps can be attached to either a profile or a contributor 
	private Integer contributorid;
	private int restriction;
	private int enabled;	//default to set as enabled

	public static int DISABLED = 0;
	public static int ENABLED = 1;
	
	public static int NORMAL = 0;
	public static int LOCKED = 1;
	public static int MANDATORY = 2;
	
	private Set<ProfileStepParameter> parameters = new HashSet<ProfileStepParameter>(
			0);
	private Step step;

	public ProfileStep(Step step) {
		this.step = step;
	}

	public Object clone()
	{
		try
		{
			//logger.info("cloning ps, psid=" + psid + " profileid=" + profileid);
			ProfileStep ps = new ProfileStep();
			ps.setPsid(this.getPsid());
			ps.setProfile(this.getProfile());
			ps.setContributorid(this.getContributorid());
			ps.setStep(this.getStep());
			ps.setRestriction(this.restriction);
			ps.setEnabled(ENABLED);
			ps.setPosition(this.getPosition());
			ps.setDescription(this.getDescription());
			for(ProfileStepParameter p : this.getParameters())
			{		
				ProfileStepParameter newp = (ProfileStepParameter)p.clone();
				newp.setPss(ps);
				ps.getParameters().add(newp);

			}
			return ps;
		}
		catch ( Exception e )
		{
			return null;
		}
	}
	
	
	public ProfileStep()
	{		
	}
	
	//this will probably cause problems if the objects are used in collections after a save that added new rows.
	//so don't do that, just fetch from the database a fresh copy.
	//I'm feeling less and less certain that the hibernate doc's recomendation to write your own equals function using a super key
	//is a good idea. 
	public boolean equals(Object obj)
	{
		if( this == obj)
			return true;
		if( obj == null || (obj.getClass() != this.getClass()))
			return false;
		ProfileStep ps = (ProfileStep) obj;
		if(  (  ( profile == null && contributorid == null && ps.getContributorid() == null && ps.getProfile().getProfileid() == null ) ||
				( profile == null && contributorid.equals(ps.getContributorid()) && ps.getProfile().getProfileid()== null) || 
				( profile != null && ps.getProfile() != null && profile.getProfileid().equals(ps.getProfile().getProfileid()) ) )   
				&& step.getStepid() == ps.getStep().getStepid() )
		{
			//we need to be carefull so that they can have a step in the pipeline multiple times
			if( (psid == null && ps.getPsid() == null && position == ps.getPosition()) || (psid != null && psid.equals(ps.getPsid())))
				return true;
		}
		//?? why does this not have a body?
		if( profile == null && contributorid == null && ps.getContributorid() == null && ps.getProfile().getProfileid() == null);			
		return false;
	}
		
	//this will probably cause problems if used with step null, a fallback to position is not a good solution
	public int hashCode() 
	{
		int result = 7;
		if(this.profile != null)
			result *= this.profile.getProfileid();
		if(this.contributorid != null)
			result = 11*result + this.contributorid;
		if(this.step != null)
			result = 29*result + this.step.getStepid();
		
		result = 31*result + this.enabled;
		//else result = 29*result + this.position;
		return result;
	}

	public ProfileStep(Integer contributorid, String description,
			int restriction, int enabled, Set<ProfileStepParameter> parameters,
			int position, Profile profile, Integer psid, Step step) {
		super();
		this.contributorid = contributorid;
		this.description = description;
		this.restriction = restriction;
		this.enabled = enabled;
		this.parameters = parameters;
		this.position = position;
		this.profile = profile;
		this.psid = psid;
		this.step = step;
	}

	@GenericGenerator(name = "generator", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = @Parameter(name = "sequence_name", value = "profilestep_seq"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "psid", nullable = false)
	public Integer getPsid() {
		return this.psid;
	}

	public void setPsid(Integer psid) {
		this.psid = psid;
	}

	@Column(name = "position")
	public int getPosition() {
		return this.position;
	}

	public void setPosition(int position) {
		this.position = position;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "contributorid")
	public Integer getContributorid() {
		return this.contributorid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "profileid")
	public Profile getProfile() {
		return profile;
	}
	public void setProfile(Profile profile) {
		this.profile = profile;
	}

	
	public void setContributorid(Integer contributorid) {
		this.contributorid = contributorid;
	}


	@Column(name = "restriction")
	public int getRestriction() {
		return restriction;
	}

	public void setRestriction(int restriction) {
		this.restriction = restriction;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "pss")
	@Cascade( { CascadeType.ALL, CascadeType.DELETE_ORPHAN })
	@OrderBy("grouplistindex ASC")
	public Set<ProfileStepParameter> getParameters() {
		return this.parameters;
	}

	public void setParameters(Set<ProfileStepParameter> parameters) {
		this.parameters = parameters;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stepid", nullable = false)
	public Step getStep() {
		return this.step;
	}

	public void setStep(Step step) {
		this.step = step;
	}

	@Column(name= "enabled")
	public int getEnabled() {
		return enabled;
	}

	public void setEnabled(int enabled) {
		this.enabled = enabled;
	}
	
}
